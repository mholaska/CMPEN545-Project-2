% Task 4 - Find a specific point
flagpole_im1 = [500, 300];
flagpole_im2 = [520, 320];

% Projection matrix
P1 = Kmat1 * [Rmat1, -Rmat1 * C1'];
P2 = Kmat2 * [Rmat2, -Rmat2 * C2'];

x1 = flagpole_im1(1);
y1 = flagpole_im1(2);
x2 = flagpole_im2(1);
y2 = flagpole_im2(2);

point_flagpole = triangulate([x1, y1], [x2, y2], P1, P2); % This is from the Computer Vision Toolbox extension

fprintf("The 3D coordinate of the flagpole in mm is (%.2f,%.2f,%.2f)\n\n", point_flagpole);

% Task 5 - Draw a 3D line between two points
start_line_im1 = [400, 200];
end_line_im1 = [600, 400];
start_line_im2 = [420, 220];
end_line_im2 = [620, 420];

% Start point of the line
x1 = start_line_im1(1);
y1 = start_line_im1(2);
x2 = start_line_im2(1);
y2 = start_line_im2(2);

start_point_line = triangulate([x1, y1], [x2, y2], P1, P2); % This is from the Computer Vision Toolbox extension

% End point of the line
x1 = end_line_im1(1);
y1 = end_line_im1(2);
x2 = end_line_im2(1);
y2 = end_line_im2(2);

end_point_line = triangulate([x1, y1], [x2, y2], P1, P2); % This is from the Computer Vision Toolbox extension

% Now plotting the 3D line between the points
figure(3);
plot3([start_point_line(1), end_point_line(1)], [start_point_line(2), end_point_line(2)], [start_point_line(3), end_point_line(3)], '-o');
title('3D Line Between Two Points');
xlabel('X (mm)');
ylabel('Y (mm)');
zlabel('Z (mm)');
grid on;
